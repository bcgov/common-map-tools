generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model knex_migrations {
  id             Int       @id @default(autoincrement())
  name           String?   @db.VarChar(255)
  batch          Int?
  migration_time DateTime? @db.Timestamptz(6)
}

model knex_migrations_lock {
  index     Int  @id @default(autoincrement())
  is_locked Int?
}

model feature {
  feature_id       Int            @id @default(autoincrement())
  feature_group_id Int?
  geo_type         String
  geo_json         Json           @db.Json
  created_by       String?        @default("00000000-0000-0000-0000-000000000000")
  created_at       DateTime?      @default(now()) @db.Timestamptz(6)
  updated_by       String?
  updated_at       DateTime?      @db.Timestamptz(6)
  feature_group    feature_group? @relation(fields: [feature_group_id], references: [feature_group_id], onDelete: Cascade, map: "feature_feature_group_id_foreign")
}

model feature_group {
  feature_group_id Int       @id @default(autoincrement())
  name             String
  created_by       String?   @default("00000000-0000-0000-0000-000000000000")
  created_at       DateTime? @default(now()) @db.Timestamptz(6)
  updated_by       String?
  updated_at       DateTime? @db.Timestamptz(6)
  feature          feature[]
}

model identity_provider {
  idp        String    @id
  active     Boolean   @default(true)
  created_by String?   @default("00000000-0000-0000-0000-000000000000")
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  updated_by String?
  updated_at DateTime? @db.Timestamptz(6)
  user       user[]
}

model user {
  user_id           String             @id @db.Uuid
  identity_id       String?            @db.Uuid
  idp               String?
  username          String
  email             String?
  first_name        String?
  full_name         String?
  last_name         String?
  active            Boolean            @default(true)
  created_by        String?            @default("00000000-0000-0000-0000-000000000000")
  created_at        DateTime?          @default(now()) @db.Timestamptz(6)
  updated_by        String?
  updated_at        DateTime?          @db.Timestamptz(6)
  identity_provider identity_provider? @relation(fields: [idp], references: [idp], onDelete: Cascade, map: "user_idp_foreign")

  @@index([email], map: "user_email_index")
  @@index([identity_id], map: "user_identity_id_index")
  @@index([username], map: "user_username_index")
}
